<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="1" hostname="fcab43db464d" name="pytest" skipped="0" tests="17" time="0.269" timestamp="2023-05-24T05:15:56.576082"><testcase classname="test.unit.calc_test.TestCalculate" name="test_add_method_fails_with_nan_parameter" time="0.002"></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_add_method_returns_correct_result" time="0.001"></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_divide_method_fails_with_division_by_zero" time="0.001"></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_divide_method_fails_with_nan_parameter" time="0.001"></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_divide_method_returns_correct_result" time="0.000"></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_logaritmo_base10_fails_with_non_positive_parameter" time="0.001"></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_logaritmo_base10_method_returns_correct_result" time="0.001"></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_multiply_method_returns_correct_result" time="0.001"></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_power_method_fails_with_nan_parameter" time="0.001"></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_power_method_returns_correct_result" time="0.001"></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_raiz_method_fails_with_negative_parameter" time="0.001"></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_raiz_method_returns_correct_result" time="0.000"></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_raiz_root_method_fails_with_non_numeric_parameter" time="0.001"><failure message="TypeError: must be real number, not str">self = &lt;unit.calc_test.TestCalculate testMethod=test_raiz_root_method_fails_with_non_numeric_parameter&gt;

    def test_raiz_root_method_fails_with_non_numeric_parameter(self):
&gt;       self.assertRaises(ValueError, self.calc.raiz, &quot;4&quot;)

test/unit/calc_test.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def raiz(self, x):
&gt;       return math.sqrt(x)
E       TypeError: must be real number, not str

app/calc.py:40: TypeError</failure></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_substract_method_fails_with_nan_parameter" time="0.001"></testcase><testcase classname="test.unit.calc_test.TestCalculate" name="test_substract_method_returns_correct_result" time="0.001"></testcase><testcase classname="test.unit.util_test.TestUtil" name="test_convert_to_number_correct_param" time="0.001"></testcase><testcase classname="test.unit.util_test.TestUtil" name="test_convert_to_number_invalid_type" time="0.001"></testcase></testsuite></testsuites>